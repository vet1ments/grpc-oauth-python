# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: oauthapp/v1/login.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.httpbody_pb2
import google.api.annotations_pb2
import oauthapp.v1.login_pb2


class LoginServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetLoginPage(self, stream: 'grpclib.server.Stream[oauthapp.v1.login_pb2.GetLoginPageRequest, google.api.httpbody_pb2.HttpBody]') -> None:
        pass

    @abc.abstractmethod
    async def Login(self, stream: 'grpclib.server.Stream[oauthapp.v1.login_pb2.LoginRequest, google.api.httpbody_pb2.HttpBody]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/oauthapp.v1.LoginService/GetLoginPage': grpclib.const.Handler(
                self.GetLoginPage,
                grpclib.const.Cardinality.UNARY_UNARY,
                oauthapp.v1.login_pb2.GetLoginPageRequest,
                google.api.httpbody_pb2.HttpBody,
            ),
            '/oauthapp.v1.LoginService/Login': grpclib.const.Handler(
                self.Login,
                grpclib.const.Cardinality.UNARY_UNARY,
                oauthapp.v1.login_pb2.LoginRequest,
                google.api.httpbody_pb2.HttpBody,
            ),
        }


class LoginServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetLoginPage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/oauthapp.v1.LoginService/GetLoginPage',
            oauthapp.v1.login_pb2.GetLoginPageRequest,
            google.api.httpbody_pb2.HttpBody,
        )
        self.Login = grpclib.client.UnaryUnaryMethod(
            channel,
            '/oauthapp.v1.LoginService/Login',
            oauthapp.v1.login_pb2.LoginRequest,
            google.api.httpbody_pb2.HttpBody,
        )


class SocialCallbackServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Callback(self, stream: 'grpclib.server.Stream[oauthapp.v1.login_pb2.CallbackRequest, google.api.httpbody_pb2.HttpBody]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/oauthapp.v1.SocialCallbackService/Callback': grpclib.const.Handler(
                self.Callback,
                grpclib.const.Cardinality.UNARY_UNARY,
                oauthapp.v1.login_pb2.CallbackRequest,
                google.api.httpbody_pb2.HttpBody,
            ),
        }


class SocialCallbackServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Callback = grpclib.client.UnaryUnaryMethod(
            channel,
            '/oauthapp.v1.SocialCallbackService/Callback',
            oauthapp.v1.login_pb2.CallbackRequest,
            google.api.httpbody_pb2.HttpBody,
        )
